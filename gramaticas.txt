"LLEVA UN NOMBRE ESPECIAL POR SER EL GENERAL DE ABC" ::= PROGRAM IDENTIFICADOR COSNTANTES DECLARAR_VARIABLES FUNCIONES  ESTRUCTURA 

ESTRUCTURA  ::= BEGIN SENTENCIAS END

SENTENCIAS  ::= SENTENCIA SENTENCIAS | SENTENCIA

SENTENCIA   ::=  FOR PUNTOYCOMA
               | WHILE PUNTOYCOMA
               | IF PUNTOYCOMA
               | ASIGNACION PUNTOYCOMA

FUNCIONES   ::=  FUNCION FUNCIONES | FUNCION
FUNCION     ::=  FUNTION IDENTIFICADOR PARENTESIS_ABRE ARGUMENTOS PARENTESIS_CIERRA

ARGUMENTOS  ::=	 EXP COMA ARGUMENTOS
	       | EXP

/*Estructura del FOR
ESTR_FOR    ::=  FOR ASIGNACION TO EXP DO ESTRUCTURA

/*Estructura del IF
ESTR_IF     ::=  IF CONDICION THEN ESTRUCTURA ELSE ESTRUCTURA | IF CONDICION THEN ESTRUCTURA

/*Estructura del WHILE
ESTR_WHILE  ::=  WHILE CONDICION DO ESTRUCTURA


EXP         ::=	 ADITIVOS | CONDICION | STRING

CONDICION   ::=	CONDICION OpOR COND_AND
	      | COND_AND 

COND_AND ::=	COND_AND OpAND COND_REL 
	      | COND_REL 

COND_REL ::= 	COND_REL OpIGUAL 	TERMINO
	      | COND_REL OpMAYOR	TERMINO
	      | COND_REL OpMAYOR_IGUAL  TERMINO
	      | COND_REL OpMENOR 	TERMINO
	      | COND_REL OpMENOR_IGUAL  TERMINO
	      | COND_REL OpDIFERENTE	TERMINO
	      | TERMINO 

ADITIVOS ::=	ADITIVOS OpSUMA	MULTIPLICATIVOS
	      | ADITIVOS OpRESTA MULTIPLICATIVOS
	      | MULTIPLICATIVOS

MULTIPLICATIVOS ::=	MULTIPLICATIVOS OpMUL UNARIO
		      | MULTIPLICATIVOS OpDIV UNARIO
		      | MULTIPLICATIVOS Op_DIV UNARIO
		      | MULTIPLICATIVOS OpMOD UNARIO	
		      | UNARIO

UNARIO	 ::=	OpINC TERMINO
	      | OpDEC TERMINO
	      | OpNOT TERMINO
	      | TERMINO

TERMINO  ::=	PARENTESIS_ABRE EXP PARENTESIS_CIERRA
	      | NUMERO
	      | IDENTIFICADOR
              | FUNCION

NUMERO	 ::=  FLOAT | INT


/*OprASIGNACION es ":="
ASIGNACION  ::= IDENTIFICADOR OprASIGNACION EXPR 
              | IDENTIFICADOR OprASIG_MAS EXPR
              | IDENTIFICADOR OprASIG_RESTA EXPR
              | IDENTIFICADOR OprASIG_MUL EXPR
              | IDENTIFICADOR OprASIG_DIV EXPR


/*OprVAR es ":", VAR es la palabra que debe venir antes de definir las variables
DECLARAR_VARIABLES ::= VAR VARIABLES 
VARIABLES          ::= VARIABLE PUNTOYCOMA VARIABLES | VARIABLE 
VARIABLE           ::= IDENTIFICADORES DOS_PUNTOS TIPO
IDENTIFICADORES    ::= IDENTIFICADOR COMA IDENTIFICADORES | IDENTIFICADOR

/*OprCONST es "=", CONST es la palabra que debe venir antes de definir las constantes
CONSTANTES          ::= CONST CONSTANTES
CONSTANTES          ::= CONSTANTE PUNTOYCOMA CONSTANTES | CONSTANTE 
CONSTANTE           ::= IDENTIFICADOR OpIGUAL EXP

TIPO        ::= TYPE_INT | TYPE_LONGINT | TYPE_SHORTINT | TYPE_CHAR | TYPE_STRING | TYPE_BOOLEAN | TYPE_REAL
