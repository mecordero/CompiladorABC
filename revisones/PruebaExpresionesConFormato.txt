//Esta es una prueba para probar las expresiones que son aceptadas por el parser
//Se considera esta una parte muy importante, puesto que las expresiones son muy usadas
//en el resto de la gramatica.  Donde sea que aparece una expresion en la gramatica, las pruebas
//aqui efectuadas tienen validez


PROGRAM Prueba

VAR

 i:int;

BEGIN

i:= ++x;

//i:= ++++x; //error ----SI DA ERROR

//i:= y[1]++; --- NO APLICAMOS ARREGLOS

i:= funcion1 (4);

//x:=2 :=4; //error no mas de una asignacion en cada linea. segun acuerdo en la clase ---- SI DA ERROR

//a:= a + b -----SI DA ERROR SE RECUPERA EN EL SIGUIENTE ;
a:= a + b;

// i:= funcion1 ( x = 3 ); ---- NO ACEPTA BIEN EL =

//i:= funcion1 ( 3 AND x ); --- NO IMPLEMENTADO ESTE TIPO

i:= (2 DIV 3 * 345 + 8/9 + 5- 6 MOD 3); //SI LA ACEPTA

//i:= 3 * 5 AND TRUE OR i // no deberia dar error porque los tipos los prueba hasta el analisis semantico ---- SI DA ERROR 

//a~b:= 8; // error lexico---- SI DA ERROR

 //read;  //se espera error ---- SI DA ERROR

 read ();

 read ( X );

 read ( 123 );  //se espera error, pues no se acepta expresion entre ( ) --- SI LA ACEPTA NO DEBERIA

 //read ( x++ ); //se espera error--- SI DA ERROR

// write ( 213 + 518 - 345 ); ---- DA ERROR NO DEBERIA

write ( C );

write ( C, 123, "Hola" );

//write ( );     //se espera error] ---  SI DA ERROR
//write ;       //se espera error -- SI DA ERROR
END


