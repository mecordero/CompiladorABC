package Parser;
import java_cup.runtime.*;

parser code {:

    public void report_error(String message, Object info) {
        System.out.println("ERROR:" + message);
      }

:}

terminal CONST, PUNTOYCOMA, IDENTIFICADOR, FLOAT, INTEGER, PARENTESIS_ABRE, PARENTESIS_CIERRA, OpINC, OpDEC, OpMUL, OpDIV, Op_DIV,Op_MOD, 
         OpSUMA, OpRESTA, OpIGUAL, OpMAYOR, OpMAYOR_IGUAL, OpMENOR, OpMENOR_IGUAL, OpDIFERENTE, Op_NOT, Op_AND, Op_OR, 
         STRING, COMA, VAR, DOS_PUNTOS, TYPE_INT, TYPE_LONGINT, TYPE_SHORTINT, TYPE_CHAR, TYPE_STRING, TYPE_BOOLEAN, TYPE_REAL;

non terminal TIPO, TEMPORAL, DECLARAR_CONSTANTES, DECLARAR_VARIABLES, VARIABLES, VARIABLE, IDENTIFICADORES, CONSTANTES, CONSTANTE, TERMINO, NUMERO, UNARIO, MULTIPLICATIVOS, ADITIVOS, COND_REL, SENTENCIA, COND_AND, COND_NOT, EXP, CONDICION, FUNCION, ARGUMENTOS;

start with TEMPORAL;

TEMPORAL ::= SENTENCIA {: System.out.println(" temp 1 "); :}
             | DECLARAR_CONSTANTES {: System.out.println(" temp 2 "); :}
             | DECLARAR_VARIABLES {: System.out.println(" temp 3 "); :};

DECLARAR_CONSTANTES ::= CONST CONSTANTES {: System.out.println(" declarar_constantes "); :};
CONSTANTES          ::= CONSTANTE PUNTOYCOMA CONSTANTES {: System.out.println(" constantes 1 "); :}
                      | CONSTANTE PUNTOYCOMA {: System.out.println(" constantes 2 "); :};
CONSTANTE           ::= IDENTIFICADOR OpIGUAL EXP {: System.out.println("constante"); :};

DECLARAR_VARIABLES ::= VAR VARIABLES {: System.out.println(" declarar_variables "); :};
VARIABLES          ::= VARIABLE PUNTOYCOMA VARIABLES {: System.out.println(" variables 1 "); :}
                      | VARIABLE PUNTOYCOMA {: System.out.println(" variables 2"); :};
VARIABLE           ::= IDENTIFICADORES DOS_PUNTOS TIPO {: System.out.println(" variable "); :};
IDENTIFICADORES    ::= IDENTIFICADOR COMA IDENTIFICADORES {: System.out.println(" identificadores 1 "); :}
                       | IDENTIFICADOR {: System.out.println(" identificadores 2 "); :};

SENTENCIA ::= CONDICION {: System.out.println(" sentencia 1 "); :}
              | EXP {: System.out.println(" sentencia 2 "); :};

EXP ::= ADITIVOS {: System.out.println(" exp 1 "); :}
      | STRING {: System.out.println(" exp 2 "); :};

CONDICION ::=	CONDICION Op_OR COND_AND {: System.out.println(" condicion 1 "); :}
	      | COND_AND {: System.out.println(" condicion 2 "); :};

COND_AND ::=	COND_AND Op_AND COND_NOT {: System.out.println(" cond_and 1 "); :}
	      | COND_NOT {: System.out.println(" cond_and 2 "); :};

COND_NOT ::=  Op_NOT COND_REL {: System.out.println(" cond_not 1 "); :}
            | COND_REL {: System.out.println(" cond_not 2 "); :};

COND_REL ::= 	ADITIVOS OpIGUAL 	ADITIVOS {: System.out.println(" cond_rel 1 "); :}
	      | ADITIVOS OpMAYOR	ADITIVOS {: System.out.println(" cond_rel 2 "); :}
	      | ADITIVOS OpMAYOR_IGUAL  ADITIVOS {: System.out.println(" cond_rel 3 "); :}
	      | ADITIVOS OpMENOR 	ADITIVOS {: System.out.println(" cond_rel 4 "); :}
	      | ADITIVOS OpMENOR_IGUAL  ADITIVOS {: System.out.println(" cond_rel 5 "); :}
	      | ADITIVOS OpDIFERENTE	ADITIVOS {: System.out.println(" cond_rel 6 "); :};



ADITIVOS ::=	ADITIVOS OpSUMA	MULTIPLICATIVOS {: System.out.println(" aditivos 1 "); :}
	      | ADITIVOS OpRESTA MULTIPLICATIVOS {: System.out.println(" aditivos 2 "); :}
	      | MULTIPLICATIVOS {: System.out.println(" aditivos 3 "); :};

MULTIPLICATIVOS ::=	MULTIPLICATIVOS OpMUL UNARIO {: System.out.println(" multiplicativos 1 "); :}
		      | MULTIPLICATIVOS OpDIV UNARIO {: System.out.println(" multiplicativos 2 "); :}
		      | MULTIPLICATIVOS Op_DIV UNARIO {: System.out.println(" multiplicativos 3 "); :}
		      | MULTIPLICATIVOS Op_MOD UNARIO {: System.out.println(" multiplicativos 4 "); :}
		      | UNARIO {: System.out.println(" multiplicativos 5 "); :};

UNARIO	 ::=	OpINC TERMINO {: System.out.println(" unario 1 "); :}
	      | OpDEC TERMINO {: System.out.println(" unario 2 "); :}
	      | TERMINO {: System.out.println(" unario 3 "); :};

TERMINO  ::=	PARENTESIS_ABRE EXP PARENTESIS_CIERRA {: System.out.println(" termino 1 "); :}
	      | NUMERO {: System.out.println(" termino 2 "); :}
	      | IDENTIFICADOR {: System.out.println(" termino 3 "); :}
              | FUNCION {: System.out.println(" termino 4 "); :};

NUMERO	 ::=  FLOAT {: System.out.println(" numero 1 "); :}
            | INTEGER {: System.out.println(" numero 2 "); :};

FUNCION  ::=  IDENTIFICADOR PARENTESIS_ABRE ARGUMENTOS PARENTESIS_CIERRA {: System.out.println(" funcion "); :};

ARGUMENTOS ::=	EXP COMA ARGUMENTOS {: System.out.println(" argumentos 1 "); :}
	      | EXP {: System.out.println(" argumentos 2 "); :};

TIPO        ::=   TYPE_INT {: System.out.println(" tipo 1 "); :}
                | TYPE_LONGINT {: System.out.println(" tipo 2 "); :}
                | TYPE_SHORTINT {: System.out.println(" tipo 3 "); :}
                | TYPE_CHAR {: System.out.println(" tipo 4 "); :}
                | TYPE_STRING {: System.out.println(" tipo 5 "); :}
                | TYPE_BOOLEAN {: System.out.println(" tipo 6 "); :}
                | TYPE_REAL {: System.out.println(" tipo 7 "); :};
