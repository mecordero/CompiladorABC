/* The following code was generated by JFlex 1.6.1 */

package Scanner;

import Clases.Tipo_token;
import static Clases.Tipo_token.*;
import Clases.ScannerException;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>C:/Users/yanil/Google Drive/IIS.2018/COMPILADORES/PROYECTO/CompiladorABC/CompiladorABC/src/Scanner/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\4\2\0\1\4\22\0\1\63\1\44\1\43\1\45"+
    "\3\44\1\0\1\60\1\60\1\6\1\53\1\54\1\50\1\62\1\5"+
    "\1\47\10\2\1\51\1\61\1\54\1\57\1\55\1\56\1\0\1\44"+
    "\1\11\1\16\1\26\1\13\1\17\1\34\1\20\1\31\1\22\1\1"+
    "\1\41\1\24\1\36\1\12\1\23\1\37\1\1\1\14\1\30\1\25"+
    "\1\35\1\32\1\33\1\42\1\15\1\1\1\46\1\0\1\52\3\44"+
    "\1\11\1\16\1\26\1\13\1\17\1\34\1\20\1\31\1\22\1\1"+
    "\1\41\1\24\1\36\1\12\1\23\1\37\1\1\1\14\1\30\1\25"+
    "\1\35\1\32\1\33\1\42\1\15\1\1\1\7\1\44\1\10\1\44"+
    "\261\0\2\21\115\0\1\27\u1faa\0\1\40\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\2\5\1\1\7\2"+
    "\1\1\5\2\1\1\10\2\2\1\1\5\1\3\6\5"+
    "\1\2\1\6\1\7\1\3\1\10\1\4\2\0\2\2"+
    "\1\0\2\2\1\0\1\2\1\11\6\2\4\11\7\2"+
    "\3\0\4\2\1\0\3\2\1\0\6\2\1\0\1\12"+
    "\2\0\1\13\1\2\1\6\2\7\1\10\1\14\1\11"+
    "\10\2\1\0\1\2\1\0\6\2\2\0\2\2\1\0"+
    "\1\2\1\0\3\2\1\11\4\2\1\0\1\2\1\14"+
    "\1\0\1\14\1\7\2\2\1\11\2\2\1\0\2\2"+
    "\1\0\4\2\2\0\5\2\1\0\3\2\1\0\1\2"+
    "\1\14\1\0\1\15\1\11\5\2\1\0\1\2\2\0"+
    "\4\2\1\0\2\2\1\0\1\2\1\11\4\2\1\0"+
    "\3\2\1\0\1\2\1\11\3\2\1\16\1\2\1\11"+
    "\2\2\1\11\166\2\1\0\1\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[330];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\64\0\150\0\234\0\64\0\320\0\u0104\0\u0138"+
    "\0\u016c\0\u01a0\0\u01d4\0\u0208\0\u023c\0\u0270\0\u02a4\0\u02d8"+
    "\0\u030c\0\u0340\0\u0374\0\u03a8\0\u03dc\0\u0410\0\u0444\0\u0478"+
    "\0\u04ac\0\u04e0\0\u0514\0\u0548\0\u057c\0\u05b0\0\u05e4\0\u0618"+
    "\0\64\0\u064c\0\u0680\0\u06b4\0\u06e8\0\u071c\0\u0750\0\u0784"+
    "\0\u07b8\0\u07ec\0\u0820\0\u0854\0\u0888\0\u08bc\0\u08f0\0\u0138"+
    "\0\u0924\0\u0958\0\u098c\0\u09c0\0\u09f4\0\u0a28\0\u0a5c\0\u0a90"+
    "\0\u0ac4\0\u0af8\0\u0b2c\0\u0b60\0\u0b94\0\u0bc8\0\u0bfc\0\64"+
    "\0\u0c30\0\u07b8\0\u0c64\0\u0c98\0\u0ccc\0\u0d00\0\u0d34\0\u0d68"+
    "\0\u0d9c\0\u0dd0\0\u0e04\0\u0e38\0\u0e6c\0\u0ea0\0\u0ed4\0\u0f08"+
    "\0\u0f3c\0\u0f70\0\u0fa4\0\u0fd8\0\u100c\0\u1040\0\u1074\0\u10a8"+
    "\0\u10dc\0\u1110\0\u1144\0\u05e4\0\64\0\u1178\0\u11ac\0\u0784"+
    "\0\u11e0\0\u1214\0\u1248\0\u127c\0\u12b0\0\u12e4\0\u11e0\0\u1318"+
    "\0\u134c\0\u1380\0\u13b4\0\u13e8\0\u141c\0\u1450\0\u1484\0\u14b8"+
    "\0\u14ec\0\u1520\0\u1554\0\u1588\0\u15bc\0\u15f0\0\u1624\0\u1658"+
    "\0\u168c\0\u16c0\0\u16f4\0\u1728\0\u175c\0\u1790\0\u17c4\0\u17f8"+
    "\0\u182c\0\u1860\0\u1894\0\u18c8\0\u18fc\0\u1930\0\u1964\0\u1998"+
    "\0\u19cc\0\u1a00\0\u1a34\0\u12b0\0\u1a68\0\u1a9c\0\u1ad0\0\u19cc"+
    "\0\u1b04\0\u1b38\0\u1b6c\0\u1ba0\0\u1bd4\0\u1c08\0\u1c3c\0\u1c70"+
    "\0\u1ca4\0\u1cd8\0\u1d0c\0\u1d40\0\u1d74\0\u1da8\0\u1ddc\0\u1e10"+
    "\0\u1e44\0\u1e78\0\u1eac\0\u1ee0\0\u1f14\0\u1f48\0\u1f7c\0\u1a34"+
    "\0\u1fb0\0\64\0\u1f7c\0\u1fe4\0\u2018\0\u204c\0\u2080\0\u20b4"+
    "\0\u20e8\0\u211c\0\u2150\0\u2184\0\u21b8\0\u21ec\0\u2220\0\u2254"+
    "\0\u2288\0\u22bc\0\u22f0\0\u2324\0\u2358\0\u2358\0\u238c\0\u23c0"+
    "\0\u23f4\0\u2428\0\u245c\0\u2490\0\u24c4\0\u24f8\0\u252c\0\u2560"+
    "\0\u2560\0\u2594\0\u25c8\0\u25fc\0\64\0\u2630\0\u2630\0\u2664"+
    "\0\u2698\0\u2698\0\u26cc\0\u2700\0\u2734\0\u2768\0\u279c\0\u27d0"+
    "\0\u2804\0\u2838\0\u286c\0\u28a0\0\u28d4\0\u2908\0\u293c\0\u2970"+
    "\0\u29a4\0\u29d8\0\u2a0c\0\u2a40\0\u2a74\0\u2aa8\0\u2adc\0\u2b10"+
    "\0\u2b44\0\u2b78\0\u2bac\0\u2be0\0\u2c14\0\u2c48\0\u2c7c\0\u2cb0"+
    "\0\u2ce4\0\u2d18\0\u2d4c\0\u2d80\0\u2db4\0\u2de8\0\u2e1c\0\u2e50"+
    "\0\u2e84\0\u2eb8\0\u2eec\0\u2f20\0\u2f54\0\u2f88\0\u2fbc\0\u2ff0"+
    "\0\u3024\0\u3058\0\u308c\0\u30c0\0\u30f4\0\u3128\0\u315c\0\u3190"+
    "\0\u31c4\0\u31f8\0\u322c\0\u3260\0\u3294\0\u32c8\0\u32fc\0\u3330"+
    "\0\u3364\0\u3398\0\u33cc\0\u3400\0\u3434\0\u3468\0\u349c\0\u34d0"+
    "\0\u3504\0\u3538\0\u356c\0\u35a0\0\u35d4\0\u3608\0\u363c\0\u3670"+
    "\0\u36a4\0\u36d8\0\u370c\0\u3740\0\u3774\0\u37a8\0\u37dc\0\u3810"+
    "\0\u3844\0\u3878\0\u38ac\0\u38e0\0\u3914\0\u3948\0\u397c\0\u39b0"+
    "\0\u39e4\0\u3a18\0\u3a4c\0\u3a80\0\u3ab4\0\u3ae8\0\u3b1c\0\u3b50"+
    "\0\u3b84\0\u3bb8\0\u3bec\0\u3c20\0\u3c54\0\u3c88\0\u3cbc\0\u3cf0"+
    "\0\u3d24\0\u3d58\0\u3d8c\0\u3dc0\0\u3df4\0\u3e28\0\u3e5c\0\u3e90"+
    "\0\u3ec4\0\u3ec4";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[330];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\2\5\1\6\1\7\1\10\1\2"+
    "\1\11\1\12\1\13\1\14\1\3\1\15\1\16\1\17"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27"+
    "\1\3\1\30\1\31\1\32\1\33\1\34\1\35\1\2"+
    "\1\3\1\36\1\37\1\2\1\40\1\41\1\42\1\43"+
    "\1\4\1\41\1\44\2\41\1\45\1\46\1\41\1\47"+
    "\1\50\1\5\65\0\2\51\2\0\2\52\2\0\10\51"+
    "\1\0\5\51\1\0\10\51\1\0\2\51\1\0\2\52"+
    "\1\0\1\51\1\52\1\51\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\1\53\1\54\6\0\10\53\1\0"+
    "\5\53\1\0\10\53\1\0\2\53\4\0\1\54\1\0"+
    "\1\54\10\0\1\55\6\0\1\56\47\0\1\41\7\0"+
    "\4\57\1\0\1\5\2\0\10\57\1\0\5\57\1\0"+
    "\10\57\1\0\2\57\4\0\1\57\1\0\1\57\3\0"+
    "\1\41\5\0\1\57\1\0\4\60\3\0\1\5\10\60"+
    "\1\0\5\60\1\0\10\60\1\0\2\60\4\0\1\60"+
    "\1\0\1\60\11\0\1\60\1\0\2\51\2\0\2\52"+
    "\2\0\1\51\1\61\1\51\1\62\4\51\1\0\5\51"+
    "\1\0\10\51\1\0\2\51\1\0\2\52\1\0\1\51"+
    "\1\52\1\51\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\51\2\0\2\52\2\0\10\51\1\63\1\64"+
    "\1\65\3\51\1\0\10\51\1\0\2\51\1\0\2\52"+
    "\1\0\1\51\1\52\1\51\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\51\2\0\2\52\2\0\10\51"+
    "\1\66\1\67\1\70\3\51\1\0\10\51\1\0\2\51"+
    "\1\0\2\52\1\0\1\51\1\52\1\51\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\51\2\0\2\52"+
    "\2\0\6\51\1\71\1\51\1\0\5\51\1\0\10\51"+
    "\1\0\2\51\1\0\2\52\1\0\1\51\1\52\1\51"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\51"+
    "\2\0\2\52\2\0\4\51\1\72\1\51\1\73\1\51"+
    "\1\0\1\51\1\74\3\51\1\0\10\51\1\0\2\51"+
    "\1\0\2\52\1\0\1\51\1\52\1\51\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\51\2\0\2\52"+
    "\2\0\1\51\1\61\6\51\1\0\2\51\1\75\2\51"+
    "\1\0\10\51\1\0\2\51\1\0\2\52\1\0\1\51"+
    "\1\52\1\51\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\51\2\0\2\52\2\0\10\51\1\0\1\51"+
    "\1\76\3\51\1\0\10\51\1\0\2\51\1\0\2\52"+
    "\1\0\1\51\1\52\1\51\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\13\0\1\77\21\0\1\100\30\0\2\51"+
    "\2\0\2\52\2\0\1\51\1\101\6\51\1\0\5\51"+
    "\1\0\4\51\1\102\3\51\1\0\2\51\1\0\2\52"+
    "\1\0\1\51\1\52\1\51\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\51\2\0\2\52\2\0\3\51"+
    "\1\102\4\51\1\0\5\51\1\0\4\51\1\102\3\51"+
    "\1\0\2\51\1\0\2\52\1\0\1\51\1\52\1\51"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\51"+
    "\2\0\2\52\2\0\1\103\7\51\1\0\1\51\1\104"+
    "\3\51\1\0\10\51\1\0\2\51\1\0\2\52\1\0"+
    "\1\51\1\52\1\51\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\51\2\0\2\52\2\0\3\51\1\105"+
    "\1\106\3\51\1\0\1\51\1\102\3\51\1\0\1\51"+
    "\1\107\6\51\1\0\2\51\1\0\2\52\1\0\1\51"+
    "\1\52\1\51\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\51\2\0\2\52\2\0\1\75\7\51\1\0"+
    "\1\51\1\110\3\51\1\0\1\51\1\111\6\51\1\0"+
    "\2\51\1\0\2\52\1\0\1\51\1\52\1\51\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\20\0\1\112\5\0"+
    "\1\113\3\0\1\114\33\0\2\51\2\0\2\52\2\0"+
    "\6\51\1\65\1\51\1\0\3\51\1\115\1\51\1\0"+
    "\1\51\1\116\6\51\1\0\2\51\1\0\2\52\1\0"+
    "\1\51\1\52\1\51\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\51\2\0\2\52\2\0\1\117\7\51"+
    "\1\0\5\51\1\0\10\51\1\0\2\51\1\0\2\52"+
    "\1\0\1\51\1\52\1\51\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\51\2\0\2\52\2\0\3\51"+
    "\1\120\4\51\1\121\1\122\4\51\1\0\1\51\1\123"+
    "\6\51\1\0\2\51\1\0\2\52\1\0\1\51\1\52"+
    "\1\51\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\51\2\0\2\52\2\0\1\124\7\51\1\125\1\126"+
    "\1\127\3\51\1\0\5\51\1\130\2\51\1\0\2\51"+
    "\1\0\2\52\1\0\1\51\1\52\1\51\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\51\2\0\2\52"+
    "\2\0\1\51\1\131\6\51\1\0\5\51\1\0\10\51"+
    "\1\0\2\51\1\0\2\52\1\0\1\51\1\52\1\51"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\51"+
    "\2\0\2\52\2\0\10\51\1\0\1\51\1\61\3\51"+
    "\1\0\10\51\1\0\2\51\1\0\2\52\1\0\1\51"+
    "\1\52\1\51\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\51\2\0\2\52\2\0\1\132\2\51\1\133"+
    "\4\51\1\0\5\51\1\0\10\51\1\0\2\51\1\0"+
    "\2\52\1\0\1\51\1\52\1\51\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\51\2\0\2\52\2\0"+
    "\10\51\1\0\1\51\1\117\3\51\1\0\10\51\1\0"+
    "\2\51\1\0\2\52\1\0\1\51\1\52\1\51\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\6\134\2\0"+
    "\10\134\1\0\5\134\1\0\10\134\1\0\2\134\1\135"+
    "\2\134\1\0\3\134\2\0\1\134\1\0\2\134\2\0"+
    "\2\134\46\0\1\136\16\0\1\53\1\137\6\0\10\53"+
    "\1\0\5\53\1\0\10\53\1\0\2\53\4\0\1\137"+
    "\1\0\1\137\10\0\1\55\51\0\1\41\4\0\1\41"+
    "\61\0\1\41\1\0\1\41\63\0\1\41\1\47\62\0"+
    "\2\41\1\47\61\0\1\41\10\0\1\140\44\0\1\140"+
    "\1\0\1\140\13\0\2\141\2\0\2\52\2\0\10\141"+
    "\1\0\5\141\1\0\10\141\1\0\2\141\1\0\2\52"+
    "\1\0\1\141\1\52\1\141\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\142\2\0\2\52\2\0\10\142"+
    "\1\0\5\142\1\0\10\142\1\0\2\142\1\0\2\52"+
    "\1\0\1\142\1\52\1\142\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\53\6\0\10\53\1\0\5\53"+
    "\1\0\10\53\1\0\2\53\4\0\1\53\1\0\1\53"+
    "\10\0\1\143\2\0\1\53\1\54\6\0\6\53\1\144"+
    "\1\53\1\0\5\53\1\0\10\53\1\0\2\53\4\0"+
    "\1\54\1\0\1\54\10\0\1\145\2\0\1\143\1\146"+
    "\6\0\10\143\1\0\5\143\1\0\10\143\1\0\2\143"+
    "\4\0\1\146\1\0\1\146\13\0\3\56\5\0\10\56"+
    "\1\0\5\56\1\0\10\56\1\0\2\56\4\0\1\56"+
    "\1\0\1\56\11\0\1\56\1\0\4\57\1\0\1\5"+
    "\2\0\10\57\1\0\5\57\1\0\10\57\1\0\2\57"+
    "\4\0\1\57\1\0\1\57\11\0\1\57\1\0\2\141"+
    "\2\0\2\52\2\0\2\141\1\147\5\141\1\0\5\141"+
    "\1\0\10\141\1\0\2\141\1\0\2\52\1\0\1\141"+
    "\1\52\1\141\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\141\2\0\2\52\2\0\3\141\1\150\4\141"+
    "\1\0\5\141\1\0\10\141\1\0\2\141\1\0\2\52"+
    "\1\0\1\141\1\52\1\141\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\25\0\1\100\40\0\2\141\2\0\2\52"+
    "\2\0\10\141\1\0\2\141\1\147\2\141\1\0\10\141"+
    "\1\0\2\141\1\0\2\52\1\0\1\141\1\52\1\141"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\141"+
    "\2\0\2\52\2\0\10\141\1\0\3\141\1\147\1\141"+
    "\1\0\10\141\1\0\2\141\1\0\2\52\1\0\1\141"+
    "\1\52\1\141\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\33\0\1\100\32\0\2\141\2\0\2\52\2\0\10\141"+
    "\1\0\5\141\1\0\2\141\1\147\5\141\1\0\2\141"+
    "\1\0\2\52\1\0\1\141\1\52\1\141\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\141\2\0\2\52"+
    "\2\0\10\141\1\0\5\141\1\0\3\141\1\151\4\141"+
    "\1\0\2\141\1\0\2\52\1\0\1\141\1\52\1\141"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\141"+
    "\2\0\2\52\2\0\1\152\7\141\1\0\4\141\1\153"+
    "\1\0\7\141\1\154\1\0\2\141\1\0\2\52\1\0"+
    "\1\141\1\52\1\141\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\141\2\0\2\52\2\0\10\141\1\0"+
    "\3\141\1\155\1\141\1\0\10\141\1\0\2\141\1\0"+
    "\2\52\1\0\1\141\1\52\1\141\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\141\2\0\2\52\2\0"+
    "\7\141\1\156\1\0\5\141\1\0\10\141\1\0\2\141"+
    "\1\0\2\52\1\0\1\141\1\52\1\141\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\141\2\0\2\52"+
    "\2\0\10\141\1\0\1\141\1\157\3\141\1\0\10\141"+
    "\1\0\2\141\1\0\2\52\1\0\1\141\1\52\1\141"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\141"+
    "\2\0\2\52\2\0\10\141\1\0\5\141\1\160\1\155"+
    "\7\141\1\0\2\141\1\0\2\52\1\0\1\141\1\52"+
    "\1\141\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\141\2\0\2\52\2\0\10\141\1\0\3\141\1\161"+
    "\1\141\1\0\10\141\1\0\2\141\1\0\2\52\1\0"+
    "\1\141\1\52\1\141\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\25\0\1\162\1\100\37\0\2\141\2\0\2\52"+
    "\2\0\10\141\1\0\2\141\1\163\1\147\1\141\1\0"+
    "\10\141\1\0\2\141\1\0\2\52\1\0\1\141\1\52"+
    "\1\141\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\141\2\0\2\52\2\0\5\141\1\164\2\141\1\0"+
    "\5\141\1\0\10\141\1\0\2\141\1\0\2\52\1\0"+
    "\1\141\1\52\1\141\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\141\2\0\2\52\2\0\1\141\1\165"+
    "\6\141\1\0\5\141\1\0\10\141\1\0\2\141\1\0"+
    "\2\52\1\0\1\141\1\52\1\141\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\141\2\0\2\52\2\0"+
    "\10\141\1\0\5\141\1\0\5\141\1\155\2\141\1\0"+
    "\2\141\1\0\2\52\1\0\1\141\1\52\1\141\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\141\2\0"+
    "\2\52\2\0\10\141\1\0\5\141\1\0\7\141\1\155"+
    "\1\0\2\141\1\0\2\52\1\0\1\141\1\52\1\141"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\141"+
    "\2\0\2\52\2\0\6\141\1\166\1\141\1\0\5\141"+
    "\1\0\10\141\1\0\2\141\1\0\2\52\1\0\1\141"+
    "\1\52\1\141\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\141\2\0\2\52\2\0\1\141\1\167\6\141"+
    "\1\0\5\141\1\0\10\141\1\0\2\141\1\0\2\52"+
    "\1\0\1\141\1\52\1\141\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\141\2\0\2\52\2\0\1\170"+
    "\7\141\1\0\5\141\1\0\10\141\1\0\2\141\1\0"+
    "\2\52\1\0\1\141\1\52\1\141\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\26\0\1\100\52\0\1\171\72\0"+
    "\1\172\41\0\2\141\2\0\2\52\2\0\3\141\1\173"+
    "\4\141\1\0\5\141\1\0\10\141\1\0\2\141\1\0"+
    "\2\52\1\0\1\141\1\52\1\141\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\141\2\0\2\52\2\0"+
    "\10\141\1\0\1\141\1\174\3\141\1\0\10\141\1\0"+
    "\2\141\1\0\2\52\1\0\1\141\1\52\1\141\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\141\2\0"+
    "\2\52\2\0\3\141\1\147\4\141\1\0\5\141\1\0"+
    "\10\141\1\0\2\141\1\0\2\52\1\0\1\141\1\52"+
    "\1\141\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\141\2\0\2\52\2\0\10\141\1\175\1\176\4\141"+
    "\1\0\10\141\1\0\2\141\1\0\2\52\1\0\1\141"+
    "\1\52\1\141\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\26\0\1\177\37\0\2\141\2\0\2\52\2\0\10\141"+
    "\1\0\3\141\1\200\1\141\1\0\10\141\1\0\2\141"+
    "\1\0\2\52\1\0\1\141\1\52\1\141\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\141\2\0\2\52"+
    "\2\0\10\141\1\125\1\201\4\141\1\0\10\141\1\0"+
    "\2\141\1\0\2\52\1\0\1\141\1\52\1\141\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\141\2\0"+
    "\2\52\2\0\10\141\1\0\2\141\1\202\2\141\1\0"+
    "\10\141\1\0\2\141\1\0\2\52\1\0\1\141\1\52"+
    "\1\141\2\0\1\52\1\0\2\52\2\0\1\52\25\0"+
    "\1\160\40\0\2\141\2\0\2\52\2\0\10\141\1\0"+
    "\2\141\1\155\2\141\1\0\10\141\1\0\2\141\1\0"+
    "\2\52\1\0\1\141\1\52\1\141\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\141\2\0\2\52\2\0"+
    "\3\141\1\203\4\141\1\0\5\141\1\0\10\141\1\0"+
    "\2\141\1\0\2\52\1\0\1\141\1\52\1\141\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\141\2\0"+
    "\2\52\2\0\1\141\1\204\6\141\1\0\5\141\1\0"+
    "\10\141\1\0\2\141\1\0\2\52\1\0\1\141\1\52"+
    "\1\141\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\141\2\0\2\52\2\0\10\141\1\0\3\141\1\205"+
    "\1\141\1\0\10\141\1\0\2\141\1\0\2\52\1\0"+
    "\1\141\1\52\1\141\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\141\2\0\2\52\2\0\10\141\1\0"+
    "\4\141\1\206\1\0\10\141\1\0\2\141\1\0\2\52"+
    "\1\0\1\141\1\52\1\141\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\141\2\0\2\52\2\0\10\141"+
    "\1\0\1\141\1\207\3\141\1\0\10\141\1\0\2\141"+
    "\1\0\2\52\1\0\1\141\1\52\1\141\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\50\0\1\210\15\0\1\53"+
    "\1\137\6\0\6\53\1\144\1\53\1\0\5\53\1\0"+
    "\10\53\1\0\2\53\4\0\1\137\1\0\1\137\10\0"+
    "\1\145\2\0\2\211\2\0\2\52\2\0\10\211\1\0"+
    "\5\211\1\0\10\211\1\0\2\211\1\0\2\52\1\0"+
    "\1\211\1\52\1\211\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\142\6\0\10\142\1\0\5\142\1\0"+
    "\10\142\1\0\2\142\4\0\1\142\1\0\1\142\13\0"+
    "\2\143\6\0\10\143\1\0\5\143\1\0\10\143\1\0"+
    "\2\143\4\0\1\143\1\0\1\143\13\0\1\53\1\212"+
    "\6\0\10\53\1\0\5\53\1\0\10\53\1\0\2\53"+
    "\4\0\1\212\1\213\1\212\1\0\1\213\6\0\1\143"+
    "\2\0\1\143\1\214\6\0\10\143\1\0\5\143\1\0"+
    "\10\143\1\0\2\143\4\0\1\214\1\0\1\214\13\0"+
    "\1\143\1\146\6\0\6\143\1\215\1\143\1\0\5\143"+
    "\1\0\10\143\1\0\2\143\4\0\1\146\1\0\1\146"+
    "\13\0\2\211\2\0\2\52\2\0\1\216\7\211\1\0"+
    "\5\211\1\0\10\211\1\0\2\211\1\0\2\52\1\0"+
    "\1\211\1\52\1\211\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\211\2\0\2\52\2\0\1\211\1\217"+
    "\6\211\1\0\5\211\1\0\10\211\1\0\2\211\1\0"+
    "\2\52\1\0\1\211\1\52\1\211\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\211\2\0\2\52\2\0"+
    "\2\211\1\220\5\211\1\0\2\211\1\220\2\211\1\0"+
    "\10\211\1\0\2\211\1\0\2\52\1\0\1\211\1\52"+
    "\1\211\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\211\2\0\2\52\2\0\10\211\1\0\1\211\1\221"+
    "\3\211\1\0\10\211\1\0\2\211\1\0\2\52\1\0"+
    "\1\211\1\52\1\211\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\211\2\0\2\52\2\0\6\211\1\222"+
    "\1\211\1\0\5\211\1\0\10\211\1\0\2\211\1\0"+
    "\2\52\1\0\1\211\1\52\1\211\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\211\2\0\2\52\2\0"+
    "\6\211\1\220\1\211\1\0\5\211\1\0\10\211\1\0"+
    "\2\211\1\0\2\52\1\0\1\211\1\52\1\211\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\211\2\0"+
    "\2\52\2\0\10\211\1\223\1\224\4\211\1\0\10\211"+
    "\1\0\2\211\1\0\2\52\1\0\1\211\1\52\1\211"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\211"+
    "\2\0\2\52\2\0\10\211\1\0\2\211\1\225\2\211"+
    "\1\0\10\211\1\0\2\211\1\0\2\52\1\0\1\211"+
    "\1\52\1\211\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\20\0\1\100\45\0\2\211\2\0\2\52\2\0\10\211"+
    "\1\0\1\211\1\220\3\211\1\0\10\211\1\0\2\211"+
    "\1\0\2\52\1\0\1\211\1\52\1\211\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\22\0\2\226\42\0\2\211"+
    "\2\0\2\52\2\0\10\211\1\226\1\227\4\211\1\0"+
    "\10\211\1\0\2\211\1\0\2\52\1\0\1\211\1\52"+
    "\1\211\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\211\2\0\2\52\2\0\6\211\1\230\1\211\1\0"+
    "\5\211\1\0\10\211\1\0\2\211\1\0\2\52\1\0"+
    "\1\211\1\52\1\211\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\211\2\0\2\52\2\0\7\211\1\231"+
    "\1\0\5\211\1\0\10\211\1\0\2\211\1\0\2\52"+
    "\1\0\1\211\1\52\1\211\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\211\2\0\2\52\2\0\1\211"+
    "\1\220\6\211\1\0\5\211\1\0\10\211\1\0\2\211"+
    "\1\0\2\52\1\0\1\211\1\52\1\211\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\211\2\0\2\52"+
    "\2\0\10\211\1\0\5\211\1\112\1\232\7\211\1\0"+
    "\2\211\1\0\2\52\1\0\1\211\1\52\1\211\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\211\2\0"+
    "\2\52\2\0\3\211\1\220\4\211\1\0\5\211\1\0"+
    "\10\211\1\0\2\211\1\0\2\52\1\0\1\211\1\52"+
    "\1\211\2\0\1\52\1\0\2\52\2\0\1\52\22\0"+
    "\2\233\55\0\1\234\50\0\2\211\2\0\2\52\2\0"+
    "\10\211\1\233\1\235\4\211\1\0\10\211\1\0\2\211"+
    "\1\0\2\52\1\0\1\211\1\52\1\211\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\211\2\0\2\52"+
    "\2\0\3\211\1\236\4\211\1\0\5\211\1\0\10\211"+
    "\1\0\2\211\1\0\2\52\1\0\1\211\1\52\1\211"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\26\0\1\160"+
    "\37\0\2\211\2\0\2\52\2\0\10\211\1\0\3\211"+
    "\1\237\1\211\1\0\10\211\1\0\2\211\1\0\2\52"+
    "\1\0\1\211\1\52\1\211\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\32\0\1\100\33\0\2\211\2\0\2\52"+
    "\2\0\10\211\1\0\5\211\1\0\1\211\1\220\6\211"+
    "\1\0\2\211\1\0\2\52\1\0\1\211\1\52\1\211"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\211"+
    "\2\0\2\52\2\0\10\211\1\0\2\211\1\237\2\211"+
    "\1\0\10\211\1\0\2\211\1\0\2\52\1\0\1\211"+
    "\1\52\1\211\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\211\2\0\2\52\2\0\10\211\1\0\5\211"+
    "\1\160\1\237\7\211\1\0\2\211\1\0\2\52\1\0"+
    "\1\211\1\52\1\211\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\2\0\2\211\2\0\2\52\2\0\10\211\1\0"+
    "\5\211\1\0\3\211\1\240\4\211\1\0\2\211\1\0"+
    "\2\52\1\0\1\211\1\52\1\211\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\211\2\0\2\52\2\0"+
    "\10\211\1\0\4\211\1\241\1\0\10\211\1\0\2\211"+
    "\1\0\2\52\1\0\1\211\1\52\1\211\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\211\2\0\2\52"+
    "\2\0\10\211\1\63\1\230\4\211\1\0\10\211\1\0"+
    "\2\211\1\0\2\52\1\0\1\211\1\52\1\211\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\211\2\0"+
    "\2\52\2\0\10\211\1\0\5\211\1\0\10\211\1\242"+
    "\1\243\1\211\1\0\2\52\1\0\1\211\1\52\1\211"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\211"+
    "\2\0\2\52\2\0\7\211\1\244\1\0\4\211\1\245"+
    "\1\0\10\211\1\0\2\211\1\0\2\52\1\0\1\211"+
    "\1\52\1\211\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\51\0\1\246\14\0\2\247\2\0\2\52\2\0\10\247"+
    "\1\0\5\247\1\0\10\247\1\0\2\247\1\0\2\52"+
    "\1\0\1\247\1\52\1\247\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\1\53\1\212\6\0\10\53\1\0"+
    "\5\53\1\0\10\53\1\0\2\53\4\0\1\212\1\0"+
    "\1\212\10\0\1\143\3\0\1\250\44\0\1\250\1\0"+
    "\1\250\13\0\1\143\1\214\6\0\10\143\1\0\5\143"+
    "\1\0\10\143\1\0\2\143\4\0\1\214\1\251\1\214"+
    "\1\0\1\251\7\0\1\252\1\0\2\247\2\0\2\52"+
    "\2\0\4\247\1\253\3\247\1\0\5\247\1\0\10\247"+
    "\1\0\2\247\1\0\2\52\1\0\1\247\1\52\1\247"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\247"+
    "\2\0\2\52\2\0\10\247\1\0\3\247\1\254\1\247"+
    "\1\0\10\247\1\0\2\247\1\0\2\52\1\0\1\247"+
    "\1\52\1\247\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\247\2\0\2\52\2\0\3\247\1\255\4\247"+
    "\1\0\5\247\1\0\10\247\1\0\2\247\1\0\2\52"+
    "\1\0\1\247\1\52\1\247\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\247\2\0\2\52\2\0\1\256"+
    "\7\247\1\0\5\247\1\0\10\247\1\0\2\247\1\0"+
    "\2\52\1\0\1\247\1\52\1\247\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\13\0\1\100\52\0\2\247\2\0"+
    "\2\52\2\0\1\247\1\253\6\247\1\0\5\247\1\0"+
    "\10\247\1\0\2\247\1\0\2\52\1\0\1\247\1\52"+
    "\1\247\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\247\2\0\2\52\2\0\6\247\1\257\1\247\1\0"+
    "\5\247\1\0\10\247\1\0\2\247\1\0\2\52\1\0"+
    "\1\247\1\52\1\247\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\13\0\1\160\52\0\2\247\2\0\2\52\2\0"+
    "\1\247\1\260\6\247\1\0\5\247\1\0\10\247\1\0"+
    "\2\247\1\0\2\52\1\0\1\247\1\52\1\247\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\247\2\0"+
    "\2\52\2\0\10\247\1\0\2\247\1\253\2\247\1\0"+
    "\10\247\1\0\2\247\1\0\2\52\1\0\1\247\1\52"+
    "\1\247\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\247\2\0\2\52\2\0\10\247\1\261\1\262\4\247"+
    "\1\0\10\247\1\0\2\247\1\0\2\52\1\0\1\247"+
    "\1\52\1\247\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\247\2\0\2\52\2\0\10\247\1\0\3\247"+
    "\1\253\1\247\1\0\10\247\1\0\2\247\1\0\2\52"+
    "\1\0\1\247\1\52\1\247\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\13\0\1\263\76\0\1\264\37\0\2\247"+
    "\2\0\2\52\2\0\1\247\1\265\6\247\1\0\5\247"+
    "\1\0\10\247\1\0\2\247\1\0\2\52\1\0\1\247"+
    "\1\52\1\247\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\247\2\0\2\52\2\0\10\247\1\0\3\247"+
    "\1\266\1\247\1\0\10\247\1\0\2\247\1\0\2\52"+
    "\1\0\1\247\1\52\1\247\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\247\2\0\2\52\2\0\6\247"+
    "\1\253\1\247\1\0\5\247\1\0\10\247\1\0\2\247"+
    "\1\0\2\52\1\0\1\247\1\52\1\247\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\247\2\0\2\52"+
    "\2\0\1\267\7\247\1\0\5\247\1\0\10\247\1\0"+
    "\2\247\1\0\2\52\1\0\1\247\1\52\1\247\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\247\2\0"+
    "\2\52\2\0\10\247\1\0\3\247\1\270\1\247\1\0"+
    "\10\247\1\0\2\247\1\0\2\52\1\0\1\247\1\52"+
    "\1\247\2\0\1\52\1\0\2\52\2\0\1\52\20\0"+
    "\1\271\45\0\2\247\2\0\2\52\2\0\6\247\1\255"+
    "\1\247\1\0\5\247\1\0\10\247\1\0\2\247\1\0"+
    "\2\52\1\0\1\247\1\52\1\247\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\247\2\0\2\52\2\0"+
    "\3\247\1\272\4\247\1\0\5\247\1\0\10\247\1\0"+
    "\2\247\1\0\2\52\1\0\1\247\1\52\1\247\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\247\2\0"+
    "\2\52\2\0\6\247\1\273\1\247\1\0\5\247\1\0"+
    "\10\247\1\0\2\247\1\0\2\52\1\0\1\247\1\52"+
    "\1\247\2\0\1\52\1\0\2\52\2\0\1\52\52\0"+
    "\1\274\13\0\2\275\2\0\2\52\2\0\10\275\1\0"+
    "\5\275\1\0\10\275\1\0\2\275\1\0\2\52\1\0"+
    "\1\275\1\52\1\275\2\0\1\52\1\0\2\52\2\0"+
    "\1\52\3\0\1\250\44\0\1\250\1\0\1\250\11\0"+
    "\1\252\1\0\2\275\2\0\2\52\2\0\10\275\1\0"+
    "\1\275\1\276\3\275\1\0\10\275\1\0\2\275\1\0"+
    "\2\52\1\0\1\275\1\52\1\275\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\275\2\0\2\52\2\0"+
    "\2\275\1\276\5\275\1\0\5\275\1\0\10\275\1\0"+
    "\2\275\1\0\2\52\1\0\1\275\1\52\1\275\2\0"+
    "\1\52\1\0\2\52\2\0\1\52\2\0\2\275\2\0"+
    "\2\52\2\0\10\275\1\0\3\275\1\276\1\275\1\0"+
    "\10\275\1\0\2\275\1\0\2\52\1\0\1\275\1\52"+
    "\1\275\2\0\1\52\1\0\2\52\2\0\1\52\2\0"+
    "\2\275\2\0\2\52\2\0\1\277\7\275\1\0\5\275"+
    "\1\0\10\275\1\0\2\275\1\0\2\52\1\0\1\275"+
    "\1\52\1\275\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\275\2\0\2\52\2\0\6\275\1\276\1\275"+
    "\1\0\5\275\1\0\10\275\1\0\2\275\1\0\2\52"+
    "\1\0\1\275\1\52\1\275\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\13\0\1\112\52\0\2\275\2\0\2\52"+
    "\2\0\1\275\1\300\6\275\1\0\5\275\1\0\10\275"+
    "\1\0\2\275\1\0\2\52\1\0\1\275\1\52\1\275"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\21\0\1\100"+
    "\64\0\2\261\42\0\2\275\2\0\2\52\2\0\7\275"+
    "\1\276\1\0\5\275\1\0\10\275\1\0\2\275\1\0"+
    "\2\52\1\0\1\275\1\52\1\275\2\0\1\52\1\0"+
    "\2\52\2\0\1\52\2\0\2\275\2\0\2\52\2\0"+
    "\10\275\1\261\1\301\4\275\1\0\10\275\1\0\2\275"+
    "\1\0\2\52\1\0\1\275\1\52\1\275\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\275\2\0\2\52"+
    "\2\0\3\275\1\302\4\275\1\0\5\275\1\0\10\275"+
    "\1\0\2\275\1\0\2\52\1\0\1\275\1\52\1\275"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\275"+
    "\2\0\2\52\2\0\10\275\1\303\1\304\4\275\1\0"+
    "\10\275\1\0\2\275\1\0\2\52\1\0\1\275\1\52"+
    "\1\275\2\0\1\52\1\0\2\52\2\0\1\52\14\0"+
    "\1\100\51\0\2\275\2\0\2\52\2\0\1\305\7\275"+
    "\1\0\5\275\1\0\10\275\1\0\2\275\1\0\2\52"+
    "\1\0\1\275\1\52\1\275\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\275\2\0\2\52\2\0\2\275"+
    "\1\306\5\275\1\0\5\275\1\0\10\275\1\0\2\275"+
    "\1\0\2\52\1\0\1\275\1\52\1\275\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\53\0\1\307\12\0\2\310"+
    "\2\0\2\52\2\0\10\310\1\0\5\310\1\0\10\310"+
    "\1\0\2\310\1\0\2\52\1\0\1\310\1\52\1\310"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\310"+
    "\2\0\2\52\2\0\1\310\1\311\6\310\1\0\5\310"+
    "\1\0\10\310\1\0\2\310\1\0\2\52\1\0\1\310"+
    "\1\52\1\310\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\310\2\0\2\52\2\0\10\310\1\0\3\310"+
    "\1\311\1\310\1\0\10\310\1\0\2\310\1\0\2\52"+
    "\1\0\1\310\1\52\1\310\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\310\2\0\2\52\2\0\1\310"+
    "\1\312\6\310\1\0\5\310\1\0\10\310\1\0\2\310"+
    "\1\0\2\52\1\0\1\310\1\52\1\310\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\310\2\0\2\52"+
    "\2\0\2\310\1\311\5\310\1\0\5\310\1\0\10\310"+
    "\1\0\2\310\1\0\2\52\1\0\1\310\1\52\1\310"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\24\0\1\223"+
    "\41\0\2\310\2\0\2\52\2\0\10\310\1\0\1\310"+
    "\1\313\3\310\1\0\10\310\1\0\2\310\1\0\2\52"+
    "\1\0\1\310\1\52\1\310\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\310\2\0\2\52\2\0\10\310"+
    "\1\0\5\310\1\0\6\310\1\311\1\310\1\0\2\310"+
    "\1\0\2\52\1\0\1\310\1\52\1\310\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\310\2\0\2\52"+
    "\2\0\10\310\1\0\5\310\1\0\5\310\1\314\2\310"+
    "\1\0\2\310\1\0\2\52\1\0\1\310\1\52\1\310"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\54\0\1\315"+
    "\11\0\2\316\2\0\2\52\2\0\10\316\1\0\5\316"+
    "\1\0\10\316\1\0\2\316\1\0\2\52\1\0\1\316"+
    "\1\52\1\316\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\316\2\0\2\52\2\0\10\316\1\0\3\316"+
    "\1\317\1\316\1\0\10\316\1\0\2\316\1\0\2\52"+
    "\1\0\1\316\1\52\1\316\2\0\1\52\1\0\2\52"+
    "\2\0\1\52\2\0\2\316\2\0\2\52\2\0\1\316"+
    "\1\317\6\316\1\0\5\316\1\0\10\316\1\0\2\316"+
    "\1\0\2\52\1\0\1\316\1\52\1\316\2\0\1\52"+
    "\1\0\2\52\2\0\1\52\2\0\2\316\2\0\2\52"+
    "\2\0\3\316\1\320\4\316\1\0\5\316\1\0\10\316"+
    "\1\0\2\316\1\0\2\52\1\0\1\316\1\52\1\316"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\321"+
    "\2\0\2\52\2\0\10\321\1\0\5\321\1\0\10\321"+
    "\1\0\2\321\1\0\2\52\1\0\1\321\1\52\1\321"+
    "\2\0\1\52\1\0\2\52\2\0\1\52\2\0\2\321"+
    "\2\0\2\52\2\0\6\321\1\322\1\321\1\0\5\321"+
    "\1\0\10\321\1\0\2\321\1\0\2\52\1\0\1\321"+
    "\1\52\1\321\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\323\2\0\2\52\2\0\10\323\1\0\5\323"+
    "\1\0\10\323\1\0\2\323\1\0\2\52\1\0\1\323"+
    "\1\52\1\323\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\324\2\0\2\52\2\0\10\324\1\0\5\324"+
    "\1\0\10\324\1\0\2\324\1\0\2\52\1\0\1\324"+
    "\1\52\1\324\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\325\2\0\2\52\2\0\10\325\1\0\5\325"+
    "\1\0\10\325\1\0\2\325\1\0\2\52\1\0\1\325"+
    "\1\52\1\325\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\326\2\0\2\52\2\0\10\326\1\0\5\326"+
    "\1\0\10\326\1\0\2\326\1\0\2\52\1\0\1\326"+
    "\1\52\1\326\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\327\2\0\2\52\2\0\10\327\1\0\5\327"+
    "\1\0\10\327\1\0\2\327\1\0\2\52\1\0\1\327"+
    "\1\52\1\327\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\330\2\0\2\52\2\0\10\330\1\0\5\330"+
    "\1\0\10\330\1\0\2\330\1\0\2\52\1\0\1\330"+
    "\1\52\1\330\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\331\2\0\2\52\2\0\10\331\1\0\5\331"+
    "\1\0\10\331\1\0\2\331\1\0\2\52\1\0\1\331"+
    "\1\52\1\331\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\332\2\0\2\52\2\0\10\332\1\0\5\332"+
    "\1\0\10\332\1\0\2\332\1\0\2\52\1\0\1\332"+
    "\1\52\1\332\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\333\2\0\2\52\2\0\10\333\1\0\5\333"+
    "\1\0\10\333\1\0\2\333\1\0\2\52\1\0\1\333"+
    "\1\52\1\333\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\334\2\0\2\52\2\0\10\334\1\0\5\334"+
    "\1\0\10\334\1\0\2\334\1\0\2\52\1\0\1\334"+
    "\1\52\1\334\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\335\2\0\2\52\2\0\10\335\1\0\5\335"+
    "\1\0\10\335\1\0\2\335\1\0\2\52\1\0\1\335"+
    "\1\52\1\335\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\336\2\0\2\52\2\0\10\336\1\0\5\336"+
    "\1\0\10\336\1\0\2\336\1\0\2\52\1\0\1\336"+
    "\1\52\1\336\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\337\2\0\2\52\2\0\10\337\1\0\5\337"+
    "\1\0\10\337\1\0\2\337\1\0\2\52\1\0\1\337"+
    "\1\52\1\337\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\340\2\0\2\52\2\0\10\340\1\0\5\340"+
    "\1\0\10\340\1\0\2\340\1\0\2\52\1\0\1\340"+
    "\1\52\1\340\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\341\2\0\2\52\2\0\10\341\1\0\5\341"+
    "\1\0\10\341\1\0\2\341\1\0\2\52\1\0\1\341"+
    "\1\52\1\341\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\342\2\0\2\52\2\0\10\342\1\0\5\342"+
    "\1\0\10\342\1\0\2\342\1\0\2\52\1\0\1\342"+
    "\1\52\1\342\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\343\2\0\2\52\2\0\10\343\1\0\5\343"+
    "\1\0\10\343\1\0\2\343\1\0\2\52\1\0\1\343"+
    "\1\52\1\343\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\344\2\0\2\52\2\0\10\344\1\0\5\344"+
    "\1\0\10\344\1\0\2\344\1\0\2\52\1\0\1\344"+
    "\1\52\1\344\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\345\2\0\2\52\2\0\10\345\1\0\5\345"+
    "\1\0\10\345\1\0\2\345\1\0\2\52\1\0\1\345"+
    "\1\52\1\345\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\346\2\0\2\52\2\0\10\346\1\0\5\346"+
    "\1\0\10\346\1\0\2\346\1\0\2\52\1\0\1\346"+
    "\1\52\1\346\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\347\2\0\2\52\2\0\10\347\1\0\5\347"+
    "\1\0\10\347\1\0\2\347\1\0\2\52\1\0\1\347"+
    "\1\52\1\347\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\350\2\0\2\52\2\0\10\350\1\0\5\350"+
    "\1\0\10\350\1\0\2\350\1\0\2\52\1\0\1\350"+
    "\1\52\1\350\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\351\2\0\2\52\2\0\10\351\1\0\5\351"+
    "\1\0\10\351\1\0\2\351\1\0\2\52\1\0\1\351"+
    "\1\52\1\351\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\352\2\0\2\52\2\0\10\352\1\0\5\352"+
    "\1\0\10\352\1\0\2\352\1\0\2\52\1\0\1\352"+
    "\1\52\1\352\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\353\2\0\2\52\2\0\10\353\1\0\5\353"+
    "\1\0\10\353\1\0\2\353\1\0\2\52\1\0\1\353"+
    "\1\52\1\353\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\354\2\0\2\52\2\0\10\354\1\0\5\354"+
    "\1\0\10\354\1\0\2\354\1\0\2\52\1\0\1\354"+
    "\1\52\1\354\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\355\2\0\2\52\2\0\10\355\1\0\5\355"+
    "\1\0\10\355\1\0\2\355\1\0\2\52\1\0\1\355"+
    "\1\52\1\355\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\356\2\0\2\52\2\0\10\356\1\0\5\356"+
    "\1\0\10\356\1\0\2\356\1\0\2\52\1\0\1\356"+
    "\1\52\1\356\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\357\2\0\2\52\2\0\10\357\1\0\5\357"+
    "\1\0\10\357\1\0\2\357\1\0\2\52\1\0\1\357"+
    "\1\52\1\357\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\360\2\0\2\52\2\0\10\360\1\0\5\360"+
    "\1\0\10\360\1\0\2\360\1\0\2\52\1\0\1\360"+
    "\1\52\1\360\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\361\2\0\2\52\2\0\10\361\1\0\5\361"+
    "\1\0\10\361\1\0\2\361\1\0\2\52\1\0\1\361"+
    "\1\52\1\361\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\362\2\0\2\52\2\0\10\362\1\0\5\362"+
    "\1\0\10\362\1\0\2\362\1\0\2\52\1\0\1\362"+
    "\1\52\1\362\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\363\2\0\2\52\2\0\10\363\1\0\5\363"+
    "\1\0\10\363\1\0\2\363\1\0\2\52\1\0\1\363"+
    "\1\52\1\363\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\364\2\0\2\52\2\0\10\364\1\0\5\364"+
    "\1\0\10\364\1\0\2\364\1\0\2\52\1\0\1\364"+
    "\1\52\1\364\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\365\2\0\2\52\2\0\10\365\1\0\5\365"+
    "\1\0\10\365\1\0\2\365\1\0\2\52\1\0\1\365"+
    "\1\52\1\365\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\366\2\0\2\52\2\0\10\366\1\0\5\366"+
    "\1\0\10\366\1\0\2\366\1\0\2\52\1\0\1\366"+
    "\1\52\1\366\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\367\2\0\2\52\2\0\10\367\1\0\5\367"+
    "\1\0\10\367\1\0\2\367\1\0\2\52\1\0\1\367"+
    "\1\52\1\367\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\370\2\0\2\52\2\0\10\370\1\0\5\370"+
    "\1\0\10\370\1\0\2\370\1\0\2\52\1\0\1\370"+
    "\1\52\1\370\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\371\2\0\2\52\2\0\10\371\1\0\5\371"+
    "\1\0\10\371\1\0\2\371\1\0\2\52\1\0\1\371"+
    "\1\52\1\371\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\372\2\0\2\52\2\0\10\372\1\0\5\372"+
    "\1\0\10\372\1\0\2\372\1\0\2\52\1\0\1\372"+
    "\1\52\1\372\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\373\2\0\2\52\2\0\10\373\1\0\5\373"+
    "\1\0\10\373\1\0\2\373\1\0\2\52\1\0\1\373"+
    "\1\52\1\373\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\374\2\0\2\52\2\0\10\374\1\0\5\374"+
    "\1\0\10\374\1\0\2\374\1\0\2\52\1\0\1\374"+
    "\1\52\1\374\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\375\2\0\2\52\2\0\10\375\1\0\5\375"+
    "\1\0\10\375\1\0\2\375\1\0\2\52\1\0\1\375"+
    "\1\52\1\375\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\376\2\0\2\52\2\0\10\376\1\0\5\376"+
    "\1\0\10\376\1\0\2\376\1\0\2\52\1\0\1\376"+
    "\1\52\1\376\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\377\2\0\2\52\2\0\10\377\1\0\5\377"+
    "\1\0\10\377\1\0\2\377\1\0\2\52\1\0\1\377"+
    "\1\52\1\377\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0100\2\0\2\52\2\0\10\u0100\1\0\5\u0100"+
    "\1\0\10\u0100\1\0\2\u0100\1\0\2\52\1\0\1\u0100"+
    "\1\52\1\u0100\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0101\2\0\2\52\2\0\10\u0101\1\0\5\u0101"+
    "\1\0\10\u0101\1\0\2\u0101\1\0\2\52\1\0\1\u0101"+
    "\1\52\1\u0101\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0102\2\0\2\52\2\0\10\u0102\1\0\5\u0102"+
    "\1\0\10\u0102\1\0\2\u0102\1\0\2\52\1\0\1\u0102"+
    "\1\52\1\u0102\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0103\2\0\2\52\2\0\10\u0103\1\0\5\u0103"+
    "\1\0\10\u0103\1\0\2\u0103\1\0\2\52\1\0\1\u0103"+
    "\1\52\1\u0103\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0104\2\0\2\52\2\0\10\u0104\1\0\5\u0104"+
    "\1\0\10\u0104\1\0\2\u0104\1\0\2\52\1\0\1\u0104"+
    "\1\52\1\u0104\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0105\2\0\2\52\2\0\10\u0105\1\0\5\u0105"+
    "\1\0\10\u0105\1\0\2\u0105\1\0\2\52\1\0\1\u0105"+
    "\1\52\1\u0105\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0106\2\0\2\52\2\0\10\u0106\1\0\5\u0106"+
    "\1\0\10\u0106\1\0\2\u0106\1\0\2\52\1\0\1\u0106"+
    "\1\52\1\u0106\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0107\2\0\2\52\2\0\10\u0107\1\0\5\u0107"+
    "\1\0\10\u0107\1\0\2\u0107\1\0\2\52\1\0\1\u0107"+
    "\1\52\1\u0107\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0108\2\0\2\52\2\0\10\u0108\1\0\5\u0108"+
    "\1\0\10\u0108\1\0\2\u0108\1\0\2\52\1\0\1\u0108"+
    "\1\52\1\u0108\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0109\2\0\2\52\2\0\10\u0109\1\0\5\u0109"+
    "\1\0\10\u0109\1\0\2\u0109\1\0\2\52\1\0\1\u0109"+
    "\1\52\1\u0109\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u010a\2\0\2\52\2\0\10\u010a\1\0\5\u010a"+
    "\1\0\10\u010a\1\0\2\u010a\1\0\2\52\1\0\1\u010a"+
    "\1\52\1\u010a\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u010b\2\0\2\52\2\0\10\u010b\1\0\5\u010b"+
    "\1\0\10\u010b\1\0\2\u010b\1\0\2\52\1\0\1\u010b"+
    "\1\52\1\u010b\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u010c\2\0\2\52\2\0\10\u010c\1\0\5\u010c"+
    "\1\0\10\u010c\1\0\2\u010c\1\0\2\52\1\0\1\u010c"+
    "\1\52\1\u010c\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u010d\2\0\2\52\2\0\10\u010d\1\0\5\u010d"+
    "\1\0\10\u010d\1\0\2\u010d\1\0\2\52\1\0\1\u010d"+
    "\1\52\1\u010d\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u010e\2\0\2\52\2\0\10\u010e\1\0\5\u010e"+
    "\1\0\10\u010e\1\0\2\u010e\1\0\2\52\1\0\1\u010e"+
    "\1\52\1\u010e\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u010f\2\0\2\52\2\0\10\u010f\1\0\5\u010f"+
    "\1\0\10\u010f\1\0\2\u010f\1\0\2\52\1\0\1\u010f"+
    "\1\52\1\u010f\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0110\2\0\2\52\2\0\10\u0110\1\0\5\u0110"+
    "\1\0\10\u0110\1\0\2\u0110\1\0\2\52\1\0\1\u0110"+
    "\1\52\1\u0110\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0111\2\0\2\52\2\0\10\u0111\1\0\5\u0111"+
    "\1\0\10\u0111\1\0\2\u0111\1\0\2\52\1\0\1\u0111"+
    "\1\52\1\u0111\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0112\2\0\2\52\2\0\10\u0112\1\0\5\u0112"+
    "\1\0\10\u0112\1\0\2\u0112\1\0\2\52\1\0\1\u0112"+
    "\1\52\1\u0112\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0113\2\0\2\52\2\0\10\u0113\1\0\5\u0113"+
    "\1\0\10\u0113\1\0\2\u0113\1\0\2\52\1\0\1\u0113"+
    "\1\52\1\u0113\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0114\2\0\2\52\2\0\10\u0114\1\0\5\u0114"+
    "\1\0\10\u0114\1\0\2\u0114\1\0\2\52\1\0\1\u0114"+
    "\1\52\1\u0114\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0115\2\0\2\52\2\0\10\u0115\1\0\5\u0115"+
    "\1\0\10\u0115\1\0\2\u0115\1\0\2\52\1\0\1\u0115"+
    "\1\52\1\u0115\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0116\2\0\2\52\2\0\10\u0116\1\0\5\u0116"+
    "\1\0\10\u0116\1\0\2\u0116\1\0\2\52\1\0\1\u0116"+
    "\1\52\1\u0116\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0117\2\0\2\52\2\0\10\u0117\1\0\5\u0117"+
    "\1\0\10\u0117\1\0\2\u0117\1\0\2\52\1\0\1\u0117"+
    "\1\52\1\u0117\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0118\2\0\2\52\2\0\10\u0118\1\0\5\u0118"+
    "\1\0\10\u0118\1\0\2\u0118\1\0\2\52\1\0\1\u0118"+
    "\1\52\1\u0118\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0119\2\0\2\52\2\0\10\u0119\1\0\5\u0119"+
    "\1\0\10\u0119\1\0\2\u0119\1\0\2\52\1\0\1\u0119"+
    "\1\52\1\u0119\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u011a\2\0\2\52\2\0\10\u011a\1\0\5\u011a"+
    "\1\0\10\u011a\1\0\2\u011a\1\0\2\52\1\0\1\u011a"+
    "\1\52\1\u011a\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u011b\2\0\2\52\2\0\10\u011b\1\0\5\u011b"+
    "\1\0\10\u011b\1\0\2\u011b\1\0\2\52\1\0\1\u011b"+
    "\1\52\1\u011b\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u011c\2\0\2\52\2\0\10\u011c\1\0\5\u011c"+
    "\1\0\10\u011c\1\0\2\u011c\1\0\2\52\1\0\1\u011c"+
    "\1\52\1\u011c\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u011d\2\0\2\52\2\0\10\u011d\1\0\5\u011d"+
    "\1\0\10\u011d\1\0\2\u011d\1\0\2\52\1\0\1\u011d"+
    "\1\52\1\u011d\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u011e\2\0\2\52\2\0\10\u011e\1\0\5\u011e"+
    "\1\0\10\u011e\1\0\2\u011e\1\0\2\52\1\0\1\u011e"+
    "\1\52\1\u011e\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u011f\2\0\2\52\2\0\10\u011f\1\0\5\u011f"+
    "\1\0\10\u011f\1\0\2\u011f\1\0\2\52\1\0\1\u011f"+
    "\1\52\1\u011f\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0120\2\0\2\52\2\0\10\u0120\1\0\5\u0120"+
    "\1\0\10\u0120\1\0\2\u0120\1\0\2\52\1\0\1\u0120"+
    "\1\52\1\u0120\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0121\2\0\2\52\2\0\10\u0121\1\0\5\u0121"+
    "\1\0\10\u0121\1\0\2\u0121\1\0\2\52\1\0\1\u0121"+
    "\1\52\1\u0121\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0122\2\0\2\52\2\0\10\u0122\1\0\5\u0122"+
    "\1\0\10\u0122\1\0\2\u0122\1\0\2\52\1\0\1\u0122"+
    "\1\52\1\u0122\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0123\2\0\2\52\2\0\10\u0123\1\0\5\u0123"+
    "\1\0\10\u0123\1\0\2\u0123\1\0\2\52\1\0\1\u0123"+
    "\1\52\1\u0123\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0124\2\0\2\52\2\0\10\u0124\1\0\5\u0124"+
    "\1\0\10\u0124\1\0\2\u0124\1\0\2\52\1\0\1\u0124"+
    "\1\52\1\u0124\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0125\2\0\2\52\2\0\10\u0125\1\0\5\u0125"+
    "\1\0\10\u0125\1\0\2\u0125\1\0\2\52\1\0\1\u0125"+
    "\1\52\1\u0125\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0126\2\0\2\52\2\0\10\u0126\1\0\5\u0126"+
    "\1\0\10\u0126\1\0\2\u0126\1\0\2\52\1\0\1\u0126"+
    "\1\52\1\u0126\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0127\2\0\2\52\2\0\10\u0127\1\0\5\u0127"+
    "\1\0\10\u0127\1\0\2\u0127\1\0\2\52\1\0\1\u0127"+
    "\1\52\1\u0127\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0128\2\0\2\52\2\0\10\u0128\1\0\5\u0128"+
    "\1\0\10\u0128\1\0\2\u0128\1\0\2\52\1\0\1\u0128"+
    "\1\52\1\u0128\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0129\2\0\2\52\2\0\10\u0129\1\0\5\u0129"+
    "\1\0\10\u0129\1\0\2\u0129\1\0\2\52\1\0\1\u0129"+
    "\1\52\1\u0129\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u012a\2\0\2\52\2\0\10\u012a\1\0\5\u012a"+
    "\1\0\10\u012a\1\0\2\u012a\1\0\2\52\1\0\1\u012a"+
    "\1\52\1\u012a\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u012b\2\0\2\52\2\0\10\u012b\1\0\5\u012b"+
    "\1\0\10\u012b\1\0\2\u012b\1\0\2\52\1\0\1\u012b"+
    "\1\52\1\u012b\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u012c\2\0\2\52\2\0\10\u012c\1\0\5\u012c"+
    "\1\0\10\u012c\1\0\2\u012c\1\0\2\52\1\0\1\u012c"+
    "\1\52\1\u012c\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u012d\2\0\2\52\2\0\10\u012d\1\0\5\u012d"+
    "\1\0\10\u012d\1\0\2\u012d\1\0\2\52\1\0\1\u012d"+
    "\1\52\1\u012d\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u012e\2\0\2\52\2\0\10\u012e\1\0\5\u012e"+
    "\1\0\10\u012e\1\0\2\u012e\1\0\2\52\1\0\1\u012e"+
    "\1\52\1\u012e\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u012f\2\0\2\52\2\0\10\u012f\1\0\5\u012f"+
    "\1\0\10\u012f\1\0\2\u012f\1\0\2\52\1\0\1\u012f"+
    "\1\52\1\u012f\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0130\2\0\2\52\2\0\10\u0130\1\0\5\u0130"+
    "\1\0\10\u0130\1\0\2\u0130\1\0\2\52\1\0\1\u0130"+
    "\1\52\1\u0130\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0131\2\0\2\52\2\0\10\u0131\1\0\5\u0131"+
    "\1\0\10\u0131\1\0\2\u0131\1\0\2\52\1\0\1\u0131"+
    "\1\52\1\u0131\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0132\2\0\2\52\2\0\10\u0132\1\0\5\u0132"+
    "\1\0\10\u0132\1\0\2\u0132\1\0\2\52\1\0\1\u0132"+
    "\1\52\1\u0132\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0133\2\0\2\52\2\0\10\u0133\1\0\5\u0133"+
    "\1\0\10\u0133\1\0\2\u0133\1\0\2\52\1\0\1\u0133"+
    "\1\52\1\u0133\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0134\2\0\2\52\2\0\10\u0134\1\0\5\u0134"+
    "\1\0\10\u0134\1\0\2\u0134\1\0\2\52\1\0\1\u0134"+
    "\1\52\1\u0134\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0135\2\0\2\52\2\0\10\u0135\1\0\5\u0135"+
    "\1\0\10\u0135\1\0\2\u0135\1\0\2\52\1\0\1\u0135"+
    "\1\52\1\u0135\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0136\2\0\2\52\2\0\10\u0136\1\0\5\u0136"+
    "\1\0\10\u0136\1\0\2\u0136\1\0\2\52\1\0\1\u0136"+
    "\1\52\1\u0136\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0137\2\0\2\52\2\0\10\u0137\1\0\5\u0137"+
    "\1\0\10\u0137\1\0\2\u0137\1\0\2\52\1\0\1\u0137"+
    "\1\52\1\u0137\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0138\2\0\2\52\2\0\10\u0138\1\0\5\u0138"+
    "\1\0\10\u0138\1\0\2\u0138\1\0\2\52\1\0\1\u0138"+
    "\1\52\1\u0138\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0139\2\0\2\52\2\0\10\u0139\1\0\5\u0139"+
    "\1\0\10\u0139\1\0\2\u0139\1\0\2\52\1\0\1\u0139"+
    "\1\52\1\u0139\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u013a\2\0\2\52\2\0\10\u013a\1\0\5\u013a"+
    "\1\0\10\u013a\1\0\2\u013a\1\0\2\52\1\0\1\u013a"+
    "\1\52\1\u013a\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u013b\2\0\2\52\2\0\10\u013b\1\0\5\u013b"+
    "\1\0\10\u013b\1\0\2\u013b\1\0\2\52\1\0\1\u013b"+
    "\1\52\1\u013b\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u013c\2\0\2\52\2\0\10\u013c\1\0\5\u013c"+
    "\1\0\10\u013c\1\0\2\u013c\1\0\2\52\1\0\1\u013c"+
    "\1\52\1\u013c\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u013d\2\0\2\52\2\0\10\u013d\1\0\5\u013d"+
    "\1\0\10\u013d\1\0\2\u013d\1\0\2\52\1\0\1\u013d"+
    "\1\52\1\u013d\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u013e\2\0\2\52\2\0\10\u013e\1\0\5\u013e"+
    "\1\0\10\u013e\1\0\2\u013e\1\0\2\52\1\0\1\u013e"+
    "\1\52\1\u013e\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u013f\2\0\2\52\2\0\10\u013f\1\0\5\u013f"+
    "\1\0\10\u013f\1\0\2\u013f\1\0\2\52\1\0\1\u013f"+
    "\1\52\1\u013f\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0140\2\0\2\52\2\0\10\u0140\1\0\5\u0140"+
    "\1\0\10\u0140\1\0\2\u0140\1\0\2\52\1\0\1\u0140"+
    "\1\52\1\u0140\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0141\2\0\2\52\2\0\10\u0141\1\0\5\u0141"+
    "\1\0\10\u0141\1\0\2\u0141\1\0\2\52\1\0\1\u0141"+
    "\1\52\1\u0141\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0142\2\0\2\52\2\0\10\u0142\1\0\5\u0142"+
    "\1\0\10\u0142\1\0\2\u0142\1\0\2\52\1\0\1\u0142"+
    "\1\52\1\u0142\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0143\2\0\2\52\2\0\10\u0143\1\0\5\u0143"+
    "\1\0\10\u0143\1\0\2\u0143\1\0\2\52\1\0\1\u0143"+
    "\1\52\1\u0143\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0144\2\0\2\52\2\0\10\u0144\1\0\5\u0144"+
    "\1\0\10\u0144\1\0\2\u0144\1\0\2\52\1\0\1\u0144"+
    "\1\52\1\u0144\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0145\2\0\2\52\2\0\10\u0145\1\0\5\u0145"+
    "\1\0\10\u0145\1\0\2\u0145\1\0\2\52\1\0\1\u0145"+
    "\1\52\1\u0145\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0146\2\0\2\52\2\0\10\u0146\1\0\5\u0146"+
    "\1\0\10\u0146\1\0\2\u0146\1\0\2\52\1\0\1\u0146"+
    "\1\52\1\u0146\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0147\2\0\2\52\2\0\10\u0147\1\0\5\u0147"+
    "\1\0\10\u0147\1\0\2\u0147\1\0\2\52\1\0\1\u0147"+
    "\1\52\1\u0147\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0148\2\0\2\52\2\0\10\u0148\1\0\5\u0148"+
    "\1\0\10\u0148\1\0\2\u0148\1\0\2\52\1\0\1\u0148"+
    "\1\52\1\u0148\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u0149\2\0\2\52\2\0\10\u0149\1\0\5\u0149"+
    "\1\0\10\u0149\1\0\2\u0149\1\0\2\52\1\0\1\u0149"+
    "\1\52\1\u0149\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\2\0\2\u014a\2\0\2\52\2\0\10\u014a\1\0\5\u014a"+
    "\1\0\10\u014a\1\0\2\u014a\1\0\2\52\1\0\1\u014a"+
    "\1\52\1\u014a\2\0\1\52\1\0\2\52\2\0\1\52"+
    "\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[16120];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\33\1\1\11\15\1\2\0"+
    "\2\1\1\0\2\1\1\0\11\1\1\11\11\1\3\0"+
    "\4\1\1\0\3\1\1\0\6\1\1\0\1\11\2\0"+
    "\20\1\1\0\1\1\1\0\6\1\2\0\2\1\1\0"+
    "\1\1\1\0\10\1\1\0\2\1\1\0\7\1\1\0"+
    "\2\1\1\0\4\1\2\0\5\1\1\0\3\1\1\0"+
    "\2\1\1\0\1\11\6\1\1\0\1\1\2\0\4\1"+
    "\1\0\2\1\1\0\6\1\1\0\3\1\1\0\5\1"+
    "\1\11\173\1\1\0\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[330];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    public String lexeme;

    public int yyline() {
    	return this.yyline;
    }

    public void error(String msg, String caracteres, int linea) throws ScannerException {
        throw new ScannerException(msg, caracteres, linea+1);
    }



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 226) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tipo_token yylex() throws java.io.IOException, ScannerException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { error("El caracter es inválido", yytext(), yyline()); return ERROR;
            }
          case 15: break;
          case 2: 
            { return IDENTIFICADOR;
            }
          case 16: break;
          case 3: 
            { return INTEGER;
            }
          case 17: break;
          case 4: 
            { /*Ignore*/
            }
          case 18: break;
          case 5: 
            { return OPERADOR;
            }
          case 19: break;
          case 6: 
            { error("Identificador erróneo: no se puede utilizar los caracter !&# en los identificadores.", yytext(),yyline()); return ERROR;
            }
          case 20: break;
          case 7: 
            { error("Numero erróneo: no se puede ingresar letras dentro de un número.", yytext(),yyline()); return ERROR;
            }
          case 21: break;
          case 8: 
            { error("Numero erróneo: no se puede finalizar un número con punto", yytext(),yyline()); return ERROR;
            }
          case 22: break;
          case 9: 
            { return PALABRA_RESERVADA;
            }
          case 23: break;
          case 10: 
            { return STRING;
            }
          case 24: break;
          case 11: 
            { error("Numero erróneo: no se puede iniciar un número con punto", yytext(),yyline()); return ERROR;
            }
          case 25: break;
          case 12: 
            { return FLOAT;
            }
          case 26: break;
          case 13: 
            { return ERROR;
            }
          case 27: break;
          case 14: 
            { return CHAR;
            }
          case 28: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
